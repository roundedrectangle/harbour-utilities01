name: CI - main branch on latest SDK (aarch64,armv7hl,i486)

env:
  # For the available docker images, see https://github.com/CODeRUS/docker-sailfishos-platform-sdk
  RELEASE: 5.0.0.43

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allows to run this workflow manually from the Actions tab.
  workflow_dispatch:
  # Rather set a new release in the spec file and a new tag in the format N/X.Y.Z (e.g., release2_sfos4.2/0.6.3) to build a release version again.

defaults:
  run:
    # Note that 'bash' provides -o pipefail, in contrast to the default (i.e., unspecified, which also uses bash) or 'sh',
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
    shell: sh

# See, e.g.: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  group: ci-${{ github.ref_name }}
  # 'false' (default) allows for two concurrent runs, one executing and one freshly enqueued; 'true' for only one; no 'concurrency:' defined for multiple.
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      # Do not wait up to the default of 10 minutes for network timeouts in a workflow which runs ca. 10 minutes.
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    # Caching Docker images is not ready yet, see 
    # https://github.com/storeman-developers/harbour-storeman-installer/blob/devel/cache-docker-images_github-ci.md
    #- name: Cache Docker images of the Sailfish-SDK
    #  id: cache-sdk
    #  uses: actions/cache@v3
    #  with:
    #    path: $GITHUB_WORKSPACE/â€¦
    #    key: cache

    - name: Prepare
      run: |
        sed -i 's/%define package_library "no"/%define package_library "yes"/g' rpm/*.spec
        mkdir RPMS

    - name: Build noarch on ${{ env.RELEASE }}
      uses: coderus/github-sfos-build@master
      with:
        release: ${{ env.RELEASE }}

    - name: Upload build results
      uses: actions/upload-artifact@v4
      with:
        name: RPM-build-results_SFOS${{ env.RELEASE }}+
        path: RPMS/